package Persistence;



import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Time;




import UserDefinedClasses.StockIntraDayPrices;



public class StoringStockPrices implements Runnable{
	String jdbcUrl = "jdbc:postgresql://localhost:5432/stocks";
    String username = "postgres";
    String password = "stocks";
    
    
   public void run(){
	   int counter=0;
	   while(true) {
	try {
		Data.Datacollection.INTRADAY_ARRAY.take();
	
		StockIntraDayPrices intraprice =Data.Datacollection.INTRADAY_ARRAY.take();
	
       try   (Connection connection = DriverManager.getConnection(jdbcUrl, username, password)) {
              String sql = "INSERT INTO stockprices_intraday(date,time,symbol,tick_open,tick_high,tick_low,tick_close,"
              		+ "tick_vol,tick_volavg_price,tick_avg_size,today_open,today_volavg_price,today_acc_vol) values(?,?,?,?,?,?,?,?,?,?,?,?,?);";
              PreparedStatement preparedStatement = connection.prepareStatement(sql);
             
              if(counter<4000) {
              	counter++;
              	Date datesql=Date.valueOf(intraprice.getDate());
              	Time timesql=Time.valueOf(intraprice.getTime());
              
              preparedStatement.setDate(1, datesql);
              preparedStatement.setTime(2, timesql);
              preparedStatement.setString(3, intraprice.getStockname());
              preparedStatement.setDouble(4, intraprice.getTickOpen());
              preparedStatement.setDouble(5, intraprice.getTickHigh());
              preparedStatement.setDouble(6, intraprice.getTickLow());
              preparedStatement.setDouble(7, intraprice.getTickClose());
              preparedStatement.setLong(8, intraprice.getTickVol());
              preparedStatement.setDouble(9, intraprice.getTickVolAvgPrice());
              preparedStatement.setLong(10, intraprice.getTickAvgTradeSize());
              
              preparedStatement.setDouble(11, intraprice.getTodayOpen());
        
              preparedStatement.setDouble(13, intraprice.getTodayVolAvgPrice());
              preparedStatement.setLong(12, intraprice.getAccvol());

              preparedStatement.addBatch();
    
              
              
                counter=0;
            
           }
      
              preparedStatement.executeBatch();
             
            
    } catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
   }}
   }
         
   


